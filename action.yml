name: 'Secret Scanning Review Action'
author: "@felickz"
description: 'Increase the visibility of Secret Scanning alerts as part of pull request collaboration'
inputs:
  token:
    description: 'GitHub Access Token that provides access to the repository. Must be provided via either parameter or environment variable. The github.token cannot be used as it does not provide secret scanning alert access.'
    required: false #TODO: make this required once the feature is GA (breaking change vs initial env var approach)
  fail-on-alert:
    description: 'A boolean to raise workflow/annotation error(instead of warning) if alert is detected.'
    required: false
    default: 'false'
  fail-on-alert-exclude-closed:
    description: "A boolean to exclude an alert from FailOnAlert if it is marked as closed (state: 'resolved')."
    required: false
    default: 'false'
  disable-pr-comment:
    description: 'A boolean to disable the PR comment feature.'
    required: false
    default: 'false'
  runtime:
    description: 'The runtime to use for the action (`powershell` or `python`).'
    required: false
    default: 'powershell'
runs:
    using: composite
    steps:
      - name: Run Powershell Script
        if: ${{ inputs.runtime == 'powershell' }}
        run: ${{ github.action_path }}/action.ps1 -GitHubToken ${{ inputs.token }} -FailOnAlert $${{ inputs.fail-on-alert }} -FailOnAlertExcludeClosed $${{ inputs.fail-on-alert-exclude-closed }} -DisablePRComment $${{ inputs.disable-pr-comment }}
        shell: pwsh
      - name: Run Python Script
        if: ${{ inputs.runtime == 'python' }}
        run: |
          pip install -r ${{ github.action_path }}/requirements.txt
          python ${{ github.action_path }}/action.py --GitHubToken ${{ inputs.token }} --FailOnAlert ${{ inputs.fail-on-alert }} --FailOnAlertExcludeClosed ${{ inputs.fail-on-alert-exclude-closed }} --DisablePRComment ${{ inputs.disable-pr-comment }}
        shell: bash
branding:
  icon: "lock"
  color: "gray-dark"
